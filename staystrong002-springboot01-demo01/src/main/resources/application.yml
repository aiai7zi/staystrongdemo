spring:
  application:
    #注册到eureka服务端的微服务名称
    name: staystrong002-springboot01-demo01
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      username: root
      password: ${pw}
      jdbcUrl: jdbc:mysql://${host}:3306/shirotest?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
      driverClassName: com.mysql.jdbc.Driver
      #初始化时建立物理连接的个数
      initialSize: 5
      #最小连接池数
      minIdle: 5
      #最大连接池数量
      maxActive: 20
      #获取连接时最大等待时间
      maxWait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: timeBetweenEvictionRunsMillis
      #毫秒的连接断开,直到连接池中的连接数到minIdle为止
      minEvictableIdleTimeMillis: 30000
      #在连接池返回连接给调用者前用来对连接进行验证的查询 SQL，要求为一条查询语句
      validationQuery: SELECT 1 FROM DUAL
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
      #如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      testWhileIdle: true
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: fasle
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: fasle
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，
      #比如说oracle。在mysql下建议关闭
      poolPreparedStatements: true
      filters: stat,wall
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      #单个connnection独享一个statement cache，
      #也就是说maxOpenPreparedStatements是针对单个connection链接的
      maxPoolPreparedStatementPerConnectionSize: 20
      #全球化
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  redis:
      # 地址
    host: 127.0.0.1
      # 端口，默认为6379
    port: 6379
      # 密码
    password:
      # 连接超时时间
    timeout: 10s

mybatis-plus:
  global-config:
    db-config:
      id-type: auto
      field-strategy: not_empty
      table-underline: true
      db-type: mysql
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
  mapper-locations: classpath*:mybatis/**/*Mapper.xml


# 日志配置
logging:
  level:
    com.staystrong: debug
    org.springframework: warn